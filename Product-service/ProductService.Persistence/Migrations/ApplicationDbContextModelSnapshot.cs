// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductService.Persistence.DatabaseContext;

#nullable disable

namespace ProductService.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductService.Domain.Entity.Book", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Language")
                        .HasColumnType("text");

                    b.Property<string>("PublicYear")
                        .HasColumnType("text");

                    b.HasKey("ProductId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("ProductService.Domain.Entity.Clothing", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<List<string>>("Color")
                        .HasColumnType("text[]");

                    b.Property<List<string>>("Sizes")
                        .HasColumnType("text[]");

                    b.HasKey("ProductId");

                    b.ToTable("Clothings");
                });

            modelBuilder.Entity("ProductService.Domain.Entity.Electronic", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<List<string>>("Color")
                        .HasColumnType("text[]");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.HasKey("ProductId");

                    b.ToTable("Electronics");
                });

            modelBuilder.Entity("ProductService.Domain.Entity.Furniture", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<List<string>>("Color")
                        .HasColumnType("text[]");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.HasKey("ProductId");

                    b.ToTable("Furnitures");
                });

            modelBuilder.Entity("ProductService.Domain.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("boolean");

                    b.Property<string>("ProductAttributes")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("text");

                    b.Property<List<string>>("ProductImages")
                        .HasColumnType("text[]");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("double precision");

                    b.Property<double>("ProductRatingAverage")
                        .HasColumnType("double precision");

                    b.Property<Guid>("ProductShop")
                        .HasColumnType("uuid");

                    b.Property<string>("ProductSlug")
                        .HasColumnType("text");

                    b.Property<string>("ProductThumb")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
